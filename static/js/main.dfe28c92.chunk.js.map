{"version":3,"sources":["components/Jumbotron/Jumbotron.jsx","components/Table/Table.jsx","containers/Home/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","id","Table","useState","user","mydata","search","state","setState","filteredSearch","filter","firstName","indexOf","type","name","value","placeholder","onChange","event","target","scope","onClick","sortedData","sort","a","b","nameA","toUpperCase","nameB","map","lastName","email","phone","Home","Work","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"+MAaeA,G,MAVA,WACb,OACE,qBAAKC,UAAU,wBAAwBC,GAAG,YAA1C,SACE,qBAAKD,UAAU,YAAf,SACE,0D,6BC0FOE,EA7FD,WAAO,IAAD,EACQC,mBAAS,CACjCC,KAAMC,EACNC,OAAQ,KAHQ,mBACXC,EADW,KACJC,EADI,KAgCZC,EAAiBF,EAAMH,KAAKM,QAAO,SAACN,GACxC,OAAiD,IAA1CA,EAAKO,UAAUC,QAAQL,EAAMD,WAWtC,OACE,qCACE,qBAAKN,UAAU,cAAf,SACE,uBACEa,KAAK,OACLC,KAAK,WACLC,MAAOR,EAAMD,OACbU,YAAY,SACZC,SA5BkB,SAACC,GAAW,IAC5BH,EAAUG,EAAMC,OAAhBJ,MACRP,EAAS,2BACJD,GADG,IAEND,OAAQS,UA2BR,uBACA,wBAAOf,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAIoB,MAAM,MAAV,gBACA,oBAAIA,MAAM,MAAV,SACE,sBAAMnB,GAAG,aAAaoB,QAvDd,WAClB,IAAMC,EAAaf,EAAMH,KAAKmB,MAAK,SAAUC,EAAGC,GAC9C,IAAIC,EAAQF,EAAEb,UAAUgB,cACpBC,EAAQH,EAAEd,UAAUgB,cACxB,OAAID,EAAQE,GACF,EAENF,EAAQE,EACH,EAEF,KAGTpB,EAAS,CACPJ,KAAMkB,KAyCE,oBAIF,oBAAIF,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,wBAGJ,iCAhCAb,EAAMD,OACDG,EAEAF,EAAMH,MA8BSyB,KAAI,SAACzB,GACrB,OACE,+BACE,6BACE,4BAAIA,EAAKH,OAEX,6BACE,4BAAIG,EAAKO,UAAY,IAAMP,EAAK0B,aAElC,6BACE,4BAAI1B,EAAK2B,UAEX,6BACE,4BAAI3B,EAAK4B,yBCzEVC,EAVJ,WACT,OACE,qCACE,cAAC,EAAD,IACA,qBAAKjC,UAAU,YAAf,SACM,cAAC,EAAD,UCDCkC,MANf,WACE,OACE,cAAC,EAAD,KCQaC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDhBQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,K","file":"static/js/main.dfe28c92.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Jumbotron.css\";\n\nconst Navbar = () => {\n  return (\n    <div className=\"jumbotron text-center\" id=\"jumbotron\">\n      <div className=\"container\">\n        <h2>Employee Directory</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;","import React, { useState } from \"react\";\nimport \"./Table.css\";\nimport mydata from \"./mydata.json\";\n\nconst Table = () => {\n  const [state, setState] = useState({\n    user: mydata,\n    search: \"\",\n  });\n\n  const handleClick = () => {\n    const sortedData = state.user.sort(function (a, b) {\n      var nameA = a.firstName.toUpperCase();\n      var nameB = b.firstName.toUpperCase();\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n      return 0;\n    });\n\n    setState({\n      user: sortedData,\n    });\n  };\n\n  const handleInputChange = (event) => {\n    const { value } = event.target;\n    setState({\n      ...state,\n      search: value,\n    });\n  };\n\n  const filteredSearch = state.user.filter((user) => {\n    return user.firstName.indexOf(state.search) !== -1;\n  });\n\n  const displayedUsers = function() {\n    if (state.search) {\n      return filteredSearch;\n    } else {\n      return state.user;\n    }\n  }\n\n  return (\n    <>\n      <div className=\"text-center\">\n        <input\n          type=\"text\"\n          name=\"employee\"\n          value={state.search}\n          placeholder=\"Search\"\n          onChange={handleInputChange}\n        />\n      </div>\n      <br />\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">ID</th>\n            <th scope=\"col\">\n              <span id=\"nameColumn\" onClick={handleClick}>\n                Name\n              </span>\n            </th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Phone</th>\n          </tr>\n        </thead>\n        <tbody>\n          {displayedUsers().map((user) => {\n            return (\n              <tr>\n                <td>\n                  <p>{user.id}</p>\n                </td>\n                <td>\n                  <p>{user.firstName + \" \" + user.lastName}</p>\n                </td>\n                <td>\n                  <p>{user.email}</p>\n                </td>\n                <td>\n                  <p>{user.phone}</p>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\nexport default Table;","import React from \"react\";\nimport Jumbotron from \"../../components/Jumbotron/Jumbotron\";\nimport Table from \"../../components/Table/Table\";\n\nconst Home = () => {\n    return (\n      <>\n        <Jumbotron />\n        <div className=\"container\">\n              <Table />\n        </div>\n      </>\n    );\n  };\n  export default Home;","import Home from \"./containers/Home/Home\";\n\nfunction Work() {\n  return (\n    <Home />\n  );\n}\n\nexport default Work;\n","  const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      });\n    }\n  };\n  \n  export default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}